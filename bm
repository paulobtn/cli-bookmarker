#!/bin/sh

function join_by { local d=${1-} f=${2-}; if shift 2; then printf %s "$f" "${@/#/$d}"; fi; }

# will load from a configuration file, but for now it just takes the 
# default browser that should be exported in .profile or .bash_profile
# bug do remove

BM_LAUNCHER=${BROWSER}
BM_EDITOR=${EDITOR}

case $1 in
    "-l") 
        #list bookmarks
        if [ -z "$2" ]; then 
            # no tag was given: list all
            cat -n bookmarks
        else
            # tag was given: list only entries that match
            cat -n bookmarks | grep "\[*$2"
        fi   
        ;;
    "-r") 
        ARR=()
        #remove bookmark if id is provided
        if [ ! -z "$2" ]; then        
            # add lines that will be deleted to an array           
            while (( "$#-1" )); do
                ARR+=($2d)
                shift 
            done
        else
            # user can select multiple entries. This returns the ids list that will be used by sed, example: [3d 5d 7d]
            ARR=(`cat -n ./bookmarks | fzf -m | awk '{print $1"d"}' | xargs echo`)
        fi
        #delete the lines
        if [ ${#ARR[@]} -ne "0" ]; then
            sed -i.bak `join_by ";" $(printf '%s\n' "${ARR[*]}")` ./bookmarks 
        fi
        
        ;;
    "-o"|""|"-s") 
        #open bookmark
        if [ -z "$2" ]; then 
            # id not provided, open search prompt
            LINE=`cat -n ./bookmarks | fzf`
            
          
            
            echo $LINE
            if [ ! -z "$LINE" ]; then 
                # open the selected url
                $BM_LAUNCHER `echo $LINE | awk '{print $2}'`
            fi
        else
            #id is provided, open url
            $BM_LAUNCHER `sed -n $2p ./bookmarks | awk '{print $1}'`;
        fi
        ;;
    "-t")
        # open with tag search
        if [ ! -z "$2" ]; then 
            LINE=`cat -n bookmarks | grep "\[*$2" | fzf`

            if [ ! -z "$LINE" ]; then 
                # open the selected url
                $BM_LAUNCHER `echo $LINE | awk '{print $2}'`
            fi
        else
            echo "must have a tag as input"
        fi
        ;;
    "-e")
        #edit with text editor
        ${BM_EDITOR} ./bookmarks 
        ;;        
    *)
        if [[ ${1:0:1} == "-" ]]; then
            echo "invalid command"
        else
            #bm [url] [description]? [tags]? should add a bookmark
            SITE=$1
            TAGS=()
            TAGSSTR=""
            DESCR=""

            # check if there's description
            if [ ! -z "$2" ]; then
                DESCR="-- $2"
                #check if there's tags
                if [ ! -z "$3" ]; then 
                    while (( "$#" )); do
                        TAGS+=($3)
                        shift 
                    done
                    TAGSSTR=`printf '[%s] ' "${TAGS[*]}"`
                fi   

            fi
            echo $SITE $DESCR $TAGSSTR >> bookmarks        
        fi
        ;;
esac